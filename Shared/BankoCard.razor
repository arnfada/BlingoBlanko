@using BlinkoBlanko.Banko
@using BlinkoBlanko.Common

@if (Plate != null)
{
    <div class="bankoCard">
        <table class="table table-bordered table-fixed">
            <thead>
            </thead>
            <tbody>
                @foreach (var row in Plate.Numbers)
                {
                    <tr>
                        @foreach (var column in row)
                        {
                            var local = column;
                            <td style="width: 11.11%" class="@((column?.IsDrawn ?? false) ? "cardNumberDrawn" : "")"
                    onclick="@(() => NumberCellClicked(local))"
                    ontouchend="@(()=> NumberCellClicked(local))">
                                <h1 class="text-center">
                                    @(column?.Number.ToString() ?? string.Empty)
                                </h1>
                            </td>
                        }
                    </tr>
                }
            </tbody>
        </table>
        <div class="cardFooter">
            <a class="link-secondary fst-italic" href="BankoCard/@Plate.PassCode/@Plate.PlateNumber">arnfada.github.io/BlingoBlanko/@Plate.PassCode/@Plate.PlateNumber</a>
            <span class="justify-content-end">Card #@Plate.PlateNumber</span>
        </div>
    </div>
}
@code {

    /// <summary>
    /// The banko plate to display
    /// </summary>
    [Parameter]
    public BankoPlate? Plate { get; set; }

    /// <summary>
    /// Get or set if user can select/highlight numbers in the cell
    /// </summary>
    [Parameter]
    public bool AllowSelectingCells { get; set; } = false;

    /// <summary>
    /// Handle user clicking on bingo cell
    /// </summary>
    /// <param name="number">the number clicked, if available</param>
    private void NumberCellClicked(PlateNumber? number)
    {
        if (!AllowSelectingCells)
        {
            return;
        }

        if (number == null)
        {
            return;
        }

        number.IsDrawn = !number.IsDrawn;
        StateHasChanged();
    }

}
